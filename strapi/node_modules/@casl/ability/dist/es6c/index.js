"use strict";Object.defineProperty(exports,"__esModule",{value:true});var t=require("@ucast/mongo2js");function e(t){return Array.isArray(t)?t:[t]}const s="__caslSubjectType__";function i(t,e){if(e)if(!e.hasOwnProperty(s))Object.defineProperty(e,s,{value:t});else if(t!==e[s])throw new Error(`Trying to cast object to subject type ${t} but previously it was casted to ${e[s]}`);return e}const r=t=>{const e=typeof t;return"string"===e||"function"===e};const n=t=>t.modelName||t.name;const o=t=>"string"===typeof t?t:n(t);function c(t){if(t.hasOwnProperty(s))return t[s];return n(t.constructor)}function u(t,s,i){let r=e(s);let n=0;while(n<r.length){const e=r[n++];if(t.hasOwnProperty(e))r=i(r,t[e])}return r}function h(t,e){if("string"===typeof e&&-1!==t.indexOf(e))return e;for(let s=0;s<e.length;s++)if(-1!==t.indexOf(e[s]))return e[s];return null}const l=(t,e)=>t.concat(e);function a(t,e){if(e in t)throw new Error(`Cannot use "${e}" as an alias because it's reserved action.`);const s=Object.keys(t);const i=(t,s)=>{const i=h(t,s);if(i)throw new Error(`Detected cycle ${i} -> ${t.join(", ")}`);const r="string"===typeof s&&s===e||-1!==t.indexOf(e)||Array.isArray(s)&&-1!==s.indexOf(e);if(r)throw new Error(`Cannot make an alias to "${e}" because this is reserved action`);return t.concat(s)};for(let e=0;e<s.length;e++)u(t,s[e],i)}function f(t,e){if(!e||false!==e.skipValidate)a(t,e&&e.anyAction||"manage");return e=>u(t,e,l)}function d(t,e,s){for(let i=s;i<e.length;i++)t.push(e[i])}function p(t,e){if(!t||!t.length)return e||[];if(!e||!e.length)return t||[];let s=0;let i=0;const r=[];while(s<t.length&&i<e.length)if(t[s].priority<e[i].priority){r.push(t[s]);s++}else{r.push(e[i]);i++}d(r,t,s);d(r,e,i);return r}function b(t,e,s){let i=t.get(e);if(!i){i=s();t.set(e,i)}return i}const y=t=>t;function w(t,e){if(Array.isArray(t.fields)&&!t.fields.length)throw new Error("`rawRule.fields` cannot be an empty array. https://bit.ly/390miLa");if(t.fields&&!e.fieldMatcher)throw new Error('You need to pass "fieldMatcher" option in order to restrict access by fields');if(t.conditions&&!e.conditionsMatcher)throw new Error('You need to pass "conditionsMatcher" option in order to restrict access by conditions')}class g{constructor(t,s,i=0){w(t,s);this.action=s.resolveAction(t.action);this.subject=t.subject;this.inverted=!!t.inverted;this.conditions=t.conditions;this.reason=t.reason;this.fields=t.fields?e(t.fields):void 0;this.priority=i;this.t=s}i(){if(this.conditions&&!this.o)this.o=this.t.conditionsMatcher(this.conditions);return this.o}get ast(){const t=this.i();return t?t.ast:void 0}matchesConditions(t){if(!this.conditions)return true;if(!t||r(t))return!this.inverted;const e=this.i();return e(t)}matchesField(t){if(!this.fields)return true;if(!t)return!this.inverted;if(this.fields&&!this.u)this.u=this.t.fieldMatcher(this.fields);return this.u(t)}}function $(t,e){const s={value:t,prev:e,next:null};if(e)e.next=s;return s}function x(t){if(t.next)t.next.prev=t.prev;if(t.prev)t.prev.next=t.next;t.next=t.prev=null}const E=t=>({value:t.value,prev:t.prev,next:t.next});const v=()=>({rules:[],merged:false});const A=()=>new Map;const m=(t,e)=>{if(!t.h&&e.fields)t.h=true};class M{constructor(t=[],e={}){this.h=false;this.l=new Map;this.p={conditionsMatcher:e.conditionsMatcher,fieldMatcher:e.fieldMatcher,resolveAction:e.resolveAction||y};this.g=e.anyAction||"manage";this.$=e.anySubjectType||"all";this.v=e.detectSubjectType||c;this.A=t;this.m=this.M(t)}get rules(){return this.A}detectSubjectType(t){if(r(t))return t;if(!t)return this.$;return this.v(t)}update(t){const e={rules:t,ability:this,target:this};this.j("update",e);this.A=t;this.m=this.M(t);this.j("updated",e);return this}M(t){const s=new Map;for(let i=t.length-1;i>=0;i--){const r=t.length-i-1;const n=new g(t[i],this.p,r);const o=e(n.action);const c=e(n.subject||this.$);m(this,n);for(let t=0;t<c.length;t++){const e=b(s,c[t],A);for(let t=0;t<o.length;t++)b(e,o[t],v).rules.push(n)}}return s}possibleRulesFor(t,e=this.$){if(!r(e))throw new Error('"possibleRulesFor" accepts only subject types (i.e., string or class) as the 2nd parameter');const s=b(this.m,e,A);const i=b(s,t,v);if(i.merged)return i.rules;const n=t!==this.g&&s.has(this.g)?s.get(this.g).rules:void 0;let o=p(i.rules,n);if(e!==this.$)o=p(o,this.possibleRulesFor(t,this.$));i.rules=o;i.merged=true;return o}rulesFor(t,e,s){const i=this.possibleRulesFor(t,e);if(s&&"string"!==typeof s)throw new Error("The 3rd, `field` parameter is expected to be a string. See https://stalniy.github.io/casl/en/api/casl-ability#can-of-pure-ability for details");if(!this.h)return i;return i.filter((t=>t.matchesField(s)))}on(t,e){const s=this.l.get(t)||null;const i=$(e,s);this.l.set(t,i);return()=>{const e=this.l.get(t);if(!i.next&&!i.prev&&e===i)this.l.delete(t);else if(i===e)this.l.set(t,i.prev);x(i)}}j(t,e){let s=this.l.get(t)||null;while(null!==s){const t=s.prev?E(s.prev):null;s.value(e);s=t}}}class PureAbility extends M{can(...t){const e=this.relevantRuleFor(...t);return!!e&&!e.inverted}relevantRuleFor(t,e,s){const i=this.detectSubjectType(e);const r=this.rulesFor(t,i,s);for(let t=0,s=r.length;t<s;t++)if(r[t].matchesConditions(e))return r[t];return null}cannot(...t){return!this.can(...t)}}const j={$eq:t.$eq,$ne:t.$ne,$lt:t.$lt,$lte:t.$lte,$gt:t.$gt,$gte:t.$gte,$in:t.$in,$nin:t.$nin,$all:t.$all,$size:t.$size,$regex:t.$regex,$options:t.$options,$elemMatch:t.$elemMatch,$exists:t.$exists};const _={eq:t.eq,ne:t.ne,lt:t.lt,lte:t.lte,gt:t.gt,gte:t.gte,in:t.within,nin:t.nin,all:t.all,size:t.size,regex:t.regex,elemMatch:t.elemMatch,exists:t.exists,and:t.and};const F=(e,s,i)=>t.createFactory(Object.assign({},j,e),Object.assign({},_,s),i);const O=t.createFactory(j,_);const C=/[-/\\^$+?.()|[\]{}]/g;const R=/\.?\*+\.?/g;const T=/\*+/;const q=/\./g;function B(t,e,s){const i="*"===s[0]||"."===t[0]&&"."===t[t.length-1]?"+":"*";const r=-1===t.indexOf("**")?"[^.]":".";const n=t.replace(q,"\\$&").replace(T,r+i);return e+t.length===s.length?`(?:${n})?`:n}function P(t,e,s){if("."===t&&("*"===s[e-1]||"*"===s[e+1]))return t;return`\\${t}`}function S(t){const e=t.map((t=>t.replace(C,P).replace(R,B)));const s=e.length>1?`(?:${e.join("|")})`:e[0];return new RegExp(`^${s}$`)}const z=t=>{let e;return s=>{if("undefined"===typeof e)e=t.every((t=>-1===t.indexOf("*")))?null:S(t);return null===e?-1!==t.indexOf(s):e.test(s)}};class Ability extends PureAbility{constructor(t=[],e={}){super(t,Object.assign({conditionsMatcher:O,fieldMatcher:z},e))}}class D{constructor(t){this._=t}because(t){this._.reason=t;return this}}class AbilityBuilder{constructor(t){this.rules=[];this.F=t;this.can=this.can.bind(this);this.cannot=this.cannot.bind(this);this.build=this.build.bind(this)}can(t,e,s,i){const r={action:t};if(e){r.subject=e;if(Array.isArray(s)||"string"===typeof s)r.fields=s;else if("undefined"!==typeof s)r.conditions=s;if("undefined"!==typeof i)r.conditions=i}this.rules.push(r);return new D(r)}cannot(t,e,s,i){const r=this.can(t,e,s,i);r._.inverted=true;return r}build(t){return new this.F(this.rules,t)}}function defineAbility(t,e){const s=new AbilityBuilder(Ability);const i=t(s.can,s.cannot);if(i&&"function"===typeof i.then)return i.then((()=>s.build(e)));return s.build(e)}const Y=t=>`Cannot execute "${t.action}" on "${t.subjectType}"`;const k=function t(e){this.message=e};k.prototype=Object.create(Error.prototype);class ForbiddenError extends k{static setDefaultMessage(t){this.O="string"===typeof t?()=>t:t}static from(t){return new this(t)}constructor(t){super("");this.ability=t;if("function"===typeof Error.captureStackTrace){this.name="ForbiddenError";Error.captureStackTrace(this,this.constructor)}}setMessage(t){this.message=t;return this}throwUnlessCan(...t){const e=this.ability.relevantRuleFor(...t);if(e&&!e.inverted)return;this.action=t[0];this.subject=t[1];this.subjectType=o(this.ability.detectSubjectType(t[1]));this.field=t[2];const s=e?e.reason:"";this.message=this.message||s||this.constructor.O(this);throw this}}ForbiddenError.O=Y;var I=Object.freeze({__proto__:null});exports.Ability=Ability;exports.AbilityBuilder=AbilityBuilder;exports.ForbiddenError=ForbiddenError;exports.PureAbility=PureAbility;exports.buildMongoQueryMatcher=F;exports.createAliasResolver=f;exports.defineAbility=defineAbility;exports.detectSubjectType=c;exports.fieldPatternMatcher=z;exports.getDefaultErrorMessage=Y;exports.hkt=I;exports.mongoQueryMatcher=O;exports.subject=i;exports.wrapArray=e;
//# sourceMappingURL=index.js.map
